Auto
head(Auto)
Hitters
head(Hitters)
pairs(Hitters)
with(Hitters,plot(Hits,Salary,na.rm=T)
)
with(Hitters,plot(Salary,na.rm=T)
with(Hitters,plot(Salary,na.rm=T))
with(Hitters,hist(Salary,na.rm=T))
with(Hitters,hist(Salary,na.rm=T,col=Salart))
with(Hitters,hist(Salary,na.rm=T,col=Salary))
with(Hitters,plot(Salary,na.rm=T,col=Salary))
with(Hitters,plot(Hits,Salary,na.rm=T)
with(Hitters,plot(Hits,Salary,na.rm=T))
head(OJ)
head(College)
head(College)
str(College)
pairs(College)
table(College$Apps,College$Accept)
dim(College)
table(College$Apps)
head(College$Apps)
head(College[,1-5])
aggregate(College,College$Apps,by=Private)
aggregate(College,College$Apps,by=Private,FUN=sum)
aggregate(College,College$Apps,by=College$Private,FUN=sum)
tapply(College$Apps,College$Private,sum)
tapply(College$Apps,College$Accept,sum)
tapply(College$Accept,College$Private,sum)
tapply(College$Apps,College$Private,sum)
prop.table(tapply(College$Apps,College$Private,sum))
prop.table(tapply(College$Accept,College$Private,sum))
str(College)
prop.table(tapply(College$PhD,College$Private,sum))
prop.table(tapply(College$Grad.Rate,College$Private,sum))
prop.table(tapply(College$Books,College$Private,sum))
prop.table(tapply(College$Personal,College$Private,sum))
Advertising
ad <- read.csv("./data/Advertising.csv")
head(ad)
dim(ad)
library(dplyr)
View(ad)
plot(data=ad,TV,Sa;es)
plot(data=ad,TV,Sales)
plot(data=ad,ad$TV,ad$Sales)
par(mfrow=c(3,1))
plot(data=ad,ad$TV,ad$Sales)
plot(data=ad,ad$Radio,ad$Sales)
plot(data=ad,ad$Newspaper,ad$Sales)
g <- ggplot()
g <- ggplot(aes(data=ad,x=TV,y=Sales))
faithful
head(faithful)
?datasets
ibrary(help = "datasets")
library(help = "datasets")
head(women)
dim(women)
hist(women)
with(women,plot(height,weight))
head(presidents)
dim(presidents)
dim(presidents)
head(occupationalStatus)
?rug
?tm
?nosim
nosim <- 1000
n <- 10
rnorm(nosim*n)
mean(rnorm(nosim*n))
mean(rnorm(nosim*n))
mean(rnorm(nosim*n))
mean(rnorm(nosim*n))
mean(rnorm(nosim*n))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(runif(nosim*n),nosim),1,mean))
sd(apply(matrix(rpois(nosim*n,4),nosim),1,mean))
library(help="UsingR")
library(UsingR);data(father.som)
qqplot
qqplot()
head(father.son)
dim(father.son)
hist(father.son$sheight)
hist(father.son$sheight,breaks=15)
hist(father.son$fheight,breaks=15)
plot(father.son$fheight,father.son$sheight)
x <- father.son$sheight
x
n <- length(x)
n
plot(x)
hist(x)
hist(x,breaks=100)
hist(x,breaks=50,col="blue")
sd9x
sd(x)
var(x)
mean(x)
sd(x),sqrt(x)
sd(x)/sqrt(x)
sd(x)
sd(x)/sqrt(n)
hist(x,breaks=15,col="blue")
hist(x,breaks=25,col="blue")
?pbinom
pbinom(6,size=8,prob=0.5,lower.tail = F)
pbinom(6,size=8,prob=0.5,lower.tail = T)
qnorm(0.95)
qnorm(0.95,mean=mu)
qnorm(0.95,mean=0,sd=1)
qnorm(0.95,mean=10,sd=1)
qnorm(0.95)
pnorm(1160,mean=1020,sd=50)
pnorm(1160,mean=1020,sd=50,lower.tail = F)
qnorm(p=0.75,mean=1020,sd=50)
qnorm(p=0.75,mean=1020,sd=50,lower.tail = D)
qnorm(p=0.75,mean=1020,sd=50,lower.tail = F)
n <- 1000
means <- cumsum(rnorm(n))/(1:n)
means
means(1:2)
means[1:10]
plot(means)
means <- cumsum(rnorm(n))
means
means/1:n
means
means/1
means/1:n
pnorm(70,mean=80,sd=10)
pnorm(70,mean=80,sd=10)
?pnorm
pnorm(70,mean=80,sd=10,lower.tail = T)
pnorm(70,mean=80,sd=10,lower.tail = F)
qnorm(p=0.95,mean=1100,sd=75,lower.tail = F)
qnorm(p=0.95,mean=1100,sd=75,lower.tail = T)
qnorm(p=0.95,mean=1100,sd=75)
pbinom(0.5,size=5)
pbinom(prob=0.5,size=5)
pbinom(4,prob=0.5,size=5)
pbinom(5,prob=0.5,size=5)
pbinom(4,prob=0.5,size=5)
pbinom(4,prob=0.5,size=5,lower.tail = F)
qnorm(p=0.95,mean=1100,sd=75)
ppois(10,lambda = 5*3)
ppois(10,lambda = 5*3,lower.tail = T)
ppois(10,lambda = 5*3,lower.tail = F)
ppois(10,lambda = 5*3)
ppois(15,lambda = 5*3)
ppois(14,lambda = 5*3)
ppois(15,lambda = 5*3)
ppois(10,lambda = 5*3)
methods("mean")
pnorm(93,mean=100,sd=10)
qnorm(95,mean=100,sd=10)
qnorm(p=0.95,mean=100,sd=10)
qnorm(.05, mean = 100, sd = 10, lower.tail = FALSE)
qnorm(.05, mean = 100, sd = 10, lower.tail = T)
qnorm(0.95,mean=1100,sd=75/sqrt(100))
pbinom(4,size=5,prob=.5)
pbinom(1,size=5,prob=.5)
pbinom(3,size=5,prob=.5)
pbinom(2,size=5,prob=.5)
pbinom(2,size=5,prob=0.5)
pbinom(2,size=5,prob=0.5,lower.tail = F)
pbinom(3,size=5,prob=0.5,lower.tail = F)
choose(5,4)*0.5^5
choose(5,4)*0.5^5+choose(5,5)*0.5^5
choose(6,5)*0.5^6+choose(6,6)*0.5^5
pbinom(4,size=6,prob=0.5,lower.tail = F)
pnorm(0.5,mean=.5,sd=sqrt(1/12/1000))
round(pnorm(.51, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE)
round(pnorm(.51, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE))
pnorm(.51, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE)
pnorm(.50, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE)
pnorm(.50, mean = 0.5, sd = sqrt(1 / 12 / 1000), lower.tail = FALSE)
round(1/sqrt(10^(1:6)),3)
pbinom(3,size=5,prob=0.5,lower.tail = F)
x    <- faithful[, 2]
x
head(faithful)
min(x)
max(x)
hist(x)
hist(x)
hist(x,breaks=c(43,96))
hist(x,breaks=c(43,96,10))
hist(x,breaks=c(10))
library(shiny)
runExample("01_hello")
hist(x, breaks = bins, col = 'darkgray', border = 'white')
bins <- c(45,93,10)
hist(x, breaks = bins, col = 'darkgray', border = 'white')
bins <- seq(min(x), max(x), length.out = 11 + 1)
bins
bins <- seq(min(x), max(x), length.out = 3 + 1)
bins
hist(x, breaks = bins, col = 'darkgray', border = 'white')
runExample("11_timer")
runExample("10_download")
runExample("08_html")
runExample("07_widgets")
runExample("06_tabsets")
runExample("03_reactivity")
runExample("02_text")
getwd()
setwd("../ShinyApps/app-2/")
library(shiny)
runApp()
runApp(display.mode = "showcase")
?uiOutput
runApp(display.mode = "showcase")
getwd()
setwd("../GDP-app")
gdp <- readRDS("./data//gdp.rds")
head(gdp)
range(gdp$Year)
subset(gdp,Coutry.or.Area == "Israel")
?subset
subset(gdp,Country.or.Area == "Israel")
c_plot <- subset(gdp,Country.or.Area == "Israel")
plot(c_plot)
plot(c_plot$Value)
plot(c_plot$Value,c_plot$Year)
plot(c_plot$Year,c_plot$Value)
plot(c_plot$Year,c_plot$Value,xlab = c(1970,2013))
range(gdp$Year)
r1 <- range(gdp$Year)
plot(c_plot$Year,c_plot$Value,xlab = r1)
plot(c_plot$Year,c_plot$Value,xlab = r1)
plot(c_plot$Year,c_plot$Value,xlab = r1)
plot(c_plot$Year,c_plot$Value,xlim = r1)
sel_c <- "Israel"
plot(c_plot$Year,c_plot$Value,xlim = r1,xlab = sel_c,ylab = "gpd level")
plot(c_plot$Year,c_plot$Value,xlim = r1,xlab = sel_c,ylab = "gpd level",type="l",col=blue)
plot(c_plot$Year,c_plot$Value,xlim = r1,xlab = sel_c,ylab = "gpd level",type="l",col="blue")
getwd
getwd()
runApp()
runApp()
cat(head(countries))
cat(head(countries))
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
setwd("../app-2/")
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("../GDP-app")
?get
names(iris)
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
gets
getwd()
setwd("../census-app")
runApp()
cs1 <- read.csv("data/counties.rds")
cs1 <- read.csv("data/counties.rds",header = T)
cs1 <- readRDS("data/counties.rds")
View(cs1)
setwd("../GDP-app/data/")
gdp1 <- readRDS("gdp.rds")
View(gdp1)
gd2 <- subset(gdp1,Country.or.Area=="Israel")
with(gd2,plot(Value,Year,type"l"))
with(gd2,plot(Value,Year,type="l"))
with(gd2,plot(Year,Value,type="l"))
with(gd2,plot(Year,Value,))
with(gd2,hist(Year,Value))
with(gd2,plot(Year,Value,type="l",col="blue"))
gd2 <- subset(gdp1,Country.or.Area=="USA")
View(gd2)
gd2 <- subset(gdp1,Country.or.Area=="United States")
with(gd2,plot(Year,Value,type="l",col="blue"))
with(gd2,plot(Year,Value,type="l",col="blue",ylim = c(5000,60000)))
with(gd2,plot(Year,Value,type="l",col="blue",ylim = c(10000,50000)))
#Singulate mean age at marriage: http://data.un.org/Data.aspx?d=GenderStat&f=inID%3a20
#Singulate mean age at marriage: http://data.un.org/Data.aspx?d=GenderStat&f=inID%3a20
#Population: http://data.un.org/Data.aspx?d=SOWC&f=inID%3a105
require("sqldf")
require("ggplot2")
setwd("/Users/aviblinder/Documents/Avi/MOOC/r_scripts/data/")
mar=read.csv("UNdata_Export_20150317_173132110.csv", nrows=321, header=T, row.names=NULL)
pop=read.csv("UNdata_Export_20150317_173353766.csv", nrows=999, header=T, row.names=NULL)
colnames(mar)[1]="Country"
colnames(pop)[1]="Country"
data=sqldf("SELECT
a.Country,
a.Value as Pop,
b.Value as Female,
c.Value as Male
FROM
pop a INNER JOIN mar b
ON (a.Country=b.Country AND b.Subgroup='Female') INNER JOIN mar c
ON (a.Country=c.Country AND c.Subgroup='Male')
WHERE a.Subgroup = 'Total'")
opts=theme(
panel.background = element_rect(fill="gray98"),
panel.border = element_rect(colour="black", fill=NA),
axis.line = element_line(size = 0.5, colour = "black"),
axis.ticks = element_line(colour="black"),
panel.grid.major = element_line(colour="gray75", linetype = 2),
panel.grid.minor = element_blank(),
axis.text = element_text(colour="gray25", size=15),
axis.title = element_text(size=18, colour="gray10"),
legend.key = element_blank(),
legend.position = "none",
legend.background = element_blank(),
plot.title = element_text(size = 40, colour="gray10"))
ggplot(data, aes(x=Female, y=Male, size=log(Pop), label=Country), guide=FALSE)+
geom_point(colour="white", fill="chartreuse3", shape=21, alpha=.55)+
scale_size_continuous(range=c(2,36))+
scale_x_continuous(limits=c(16,36), breaks=seq(16, 36, by = 2), expand = c(0, 0))+
scale_y_continuous(limits=c(16,36), breaks=seq(16, 36, by = 2), expand = c(0, 0))+
geom_abline(intercept = 0, slope = 1, colour = "gray10", linetype=2)+
labs(title="The World We Live In #4: Marriage Ages",
x="Females mean age at marriage",
y="Males mean age at marriage")+
geom_text(data=subset(data, abs(Female-Male)>7), size=5.5, colour="gray25", hjust=0, vjust=0)+
geom_text(data=subset(data, Female>=32|Female<=18), size=5.5, colour="gray25", hjust=0, vjust=0)+
geom_text(aes(24, 17), colour="gray25", hjust=0, label="Source: United Nations (size of bubble depending on population)", size=5)+opts
setwd("../../ShinyApps/GDP-app/")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
gdp <- readRDS("./data//gdp.rds")
countries <- unique(gdp$Country.or.Area)
class(countries)
countries <- as.list(unique(gdp$Country.or.Area))
class(countries)
countries$Israel
countries
runApp()
runApp()
runApp()
dat
dat
runApp()
subset(gdp,Country.or.Area[2])
subset(gdp,Country.or.Area)[2])
subset(gdp,Country.or.Area)[,2])
subset(gdp,Country.or.Area))[,2]
countries
countries[2]
countries <- (unique(gdp$Country.or.Area))
countries
countries[2]
countries <- as.list(unique(gdp$Country.or.Area))
countries[2]
countries$2
countries[[2]]
runApp()
names(iris)
class(names(iris))
countries <- as.character(unique(gdp$Country.or.Area))
countries
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(data = weather, aes(x = h.temp, y= l.temp) + geom_point(colour = "blue")
)
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point() +
geom_smooth(method = "lm", se = F)
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
xlab("test1")
a = "Argent"
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
xlab("test1",a)
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point() +
geom_smooth(method = "lm", se = F)
xlab ("this is x")
a <- "Argentina"
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
xlab ("this is x")
a <- "Argentina"
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
xlab ("this is x")
a <- "Argentina"
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
xlab ("this is x1 ")
a <- "Argentina"
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
xlab ("this is x1 ",a)
a <- "Argentina"
b <- paste ("this is paste",a)
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
xlab (b)
shiny::runApp()
gdp <- readRDS("./data//gdp.rds")
countries <- as.character(unique(gdp$Country.or.Area))
country_plot <- subset(gdp,Country.or.Area == "Israel")
range(country_plot$Year)
min(country_plot$Year)
mid <- (min(country_plot$Year)+max(country_plot$Year))/2
mid
mid <- round((min(country_plot$Year)+max(country_plot$Year))/2,0)
mid
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("../stockVis/")
runApp("stockVis")
getwd()
runApp()
shiny::runApp()
runApp()
getwd()
setwd("../GDP-app/")
runApp()
library(shinyapps)
shinyapps::deployApp()
